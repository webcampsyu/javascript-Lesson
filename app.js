/*変数の記述
let 変数名 = 内容(初期値)*/
let hello = 'Hellow World';
alert(hello);

/*変数に代入できるコードの例

整数を代入する
let int1 = 1;

負数を代入する
let int2 = 10;

少数を代入する
let float1 = 3.14;

文字列を代入する
let str1 = 'JavaScritpを覚えよう';
*/

/*四則演算の記述方法

足し算
alert(4 + 3);

引き算
alert(4 - 3);

掛け算
alert(4 * 3);

割り算
alert(4 / 3);
*/

/*条件分岐
条件式が1つの場合
if(条件1){
  処理1
}
条件１を満たすときは、処理1を実行

1つの条件式で処理を2つに分ける場合
if(条件1){
  処理1
} else{
  処理2
}
条件1を満たすときは処理1を実行
満たさないときは処理2を実行

2つの条件式で、処理を2つにわける場合
if(条件1){
  処理1
} elsif(条件2){
  処理2
} else{
  処理3
}
条件1を満たすときは、処理1を実行
条件2を満たすときは、処理2を実行
どちらも満たさないときは、処理3を実行
*/

let orange = 100;
let apple = 120;

if(orange < apple){
  alert('みかんの値段がリンゴより安い');
} else if(orange == apple){
  alert('みかんとリンゴが同じ値段');
} else{
  alert('みかんの値段がリンゴより高い');
}

/*繰り返し処理
JavaScriptでは「while文」と「for文」の2つの方法
while文
条件が真なら(true)なら制限なく繰り返す
繰り返される回数は決まってない

while(条件){
  処理
}
引数の条件がtrueの間、波括弧内部の処理が繰り返される

do...while文
条件式のtrue/falseに関わらず、最初の1回だけは必ず処理を行う
その後、条件式を評価して、繰り返し処理を続けるか/抜けるかを決める

do{
  最低1回は行われる処理
}while(条件式);
*/

let max = 100;
let num = 1;
let count = 0;

while(num < max){
  num = num * 2;
  count = count + 1;
}
alert('2をかけ続けて' + max + 'を超えるのに必要だった回数は' + count + '回です');

/*
for文
決められた回数の処理を繰り返す
・「繰り返す回数」を初期値で設定する
・「条件を満たす場合の処理」を記述する

for( 初期値; 条件式; 像現地 ){
  繰り返し処理
}
*/

let i; //「変数i」を宣言
let num = 0; //「変数num」を宣言し、初期値を「0」に設定

for(i = 1; i < 11; i++){ //変数iの初期値を「1」に設定し、変数iが「11」未満の時は変数iに1を足す(「i++」は「i = i+1」と同じ)
  num = num + i; //変数numに「num+i」を代入
}
alert('1から10まで足し算した結果は' + num + 'です'); //アラーとウィンドウに計算結果を表示